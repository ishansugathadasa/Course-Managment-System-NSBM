/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.admin;

import controller.InstructorController;
import controller.InstructorController;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Instructor;
import model.Instructor;
import other.ComboSearch;
import other.IDGenerator;

/**
 *
 * @author DinukaMedis
 */
public class ManageInstructorPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageInstructorPAnel
     */
    public ManageInstructorPanel() {
        initComponents();
        fillInstructorIdCombo();
        newInstructorBtn.setVisible(true);
        addBtn.setVisible(false);
        instructorIdCombo.setVisible(true);
        instructorIdTxt.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        emailTxt = new javax.swing.JTextField();
        genderTxt = new javax.swing.JTextField();
        phoneTxt = new javax.swing.JTextField();
        dobTxt = new javax.swing.JTextField();
        instructorIdTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        nicTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTxt = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        instructorIdCombo = new javax.swing.JComboBox<>();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        newInstructorBtn = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/profilePics/dpSample.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 110, 150));

        jButton1.setText("Change");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Basic Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Instructor Id :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 130, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Name :");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 130, 30));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Date of Birthday :");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 30, 130, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("E mail :");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 130, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Phone No :");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 130, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Gender :");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 130, 30));

        emailTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(emailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 310, -1));

        genderTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(genderTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 110, -1));

        phoneTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(phoneTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 190, -1));

        dobTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        dobTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobTxtActionPerformed(evt);
            }
        });
        jPanel2.add(dobTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 170, -1));

        instructorIdTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(instructorIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 170, -1));

        nameTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 310, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setText("NIC :");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 130, 30));

        nicTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(nicTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 190, -1));

        addressTxt.setColumns(20);
        addressTxt.setRows(5);
        jScrollPane1.setViewportView(addressTxt);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 100, 260, 90));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Address :");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 130, 30));

        instructorIdCombo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        instructorIdCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                instructorIdComboItemStateChanged(evt);
            }
        });
        jPanel2.add(instructorIdCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 170, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 920, 320));

        deleteBtn.setBackground(new java.awt.Color(51, 255, 255));
        deleteBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, 200, 40));

        updateBtn.setBackground(new java.awt.Color(51, 255, 255));
        updateBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 360, 200, 40));

        addBtn.setBackground(new java.awt.Color(51, 255, 255));
        addBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel1.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 200, 40));

        newInstructorBtn.setBackground(new java.awt.Color(51, 255, 255));
        newInstructorBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        newInstructorBtn.setText("NEW INSTRUCTOR");
        newInstructorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newInstructorBtnActionPerformed(evt);
            }
        });
        jPanel1.add(newInstructorBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 200, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dobTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobTxtActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {
            String instructorId = instructorIdTxt.getText();
            int isDeleted = InstructorController.deleteInstructor(instructorId);
            if (isDeleted>0) {
                JOptionPane.showMessageDialog(this, "Instructor Deleted sucsess...");
                instructorIdCombo.removeAllItems();
                fillInstructorIdCombo();
            }else{
                JOptionPane.showMessageDialog(this, "Something wrong...");
                instructorIdCombo.removeAllItems();
                fillInstructorIdCombo();
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        try {
            String instructorId = instructorIdTxt.getText();
            String name = nameTxt.getText();
            String nic = nicTxt.getText();
            String email = emailTxt.getText();
            int phone = Integer.parseInt(phoneTxt.getText());
            String address = addressTxt.getText();
            String gender = genderTxt.getText();
            String dob = dobTxt.getText();
            Instructor instructor= new Instructor(instructorId, name, nic, email, 
                    phone, address, gender, dob);
            int isAdded = InstructorController.addInstructor(instructor);
            if (isAdded>0) {
                JOptionPane.showMessageDialog(this, "Instructor added sucsess...");
                newInstructorBtn.setVisible(true);
                addBtn.setVisible(false);
                instructorIdCombo.setVisible(true);
                instructorIdTxt.setVisible(false);
                instructorIdCombo.removeAllItems();
                fillInstructorIdCombo();
            }else{
                JOptionPane.showMessageDialog(this, "Something wrong...");
                newInstructorBtn.setVisible(true);
                addBtn.setVisible(false);
                instructorIdCombo.setVisible(true);
                instructorIdTxt.setVisible(false);
                instructorIdCombo.removeAllItems();
                fillInstructorIdCombo();
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            String instructorId = instructorIdCombo.getSelectedItem().toString();
            String name = nameTxt.getText();
            String nic = nicTxt.getText();
            String email = emailTxt.getText();
            int phone = Integer.parseInt(phoneTxt.getText());
            String address = addressTxt.getText();
            String gender = genderTxt.getText();
            String dob = dobTxt.getText();
            Instructor instructor= new Instructor(instructorId, name, nic, email, 
                    phone, address, gender, dob);
            int isUpdated = InstructorController.updateInstructor(instructor);
            if (isUpdated>0) {
                JOptionPane.showMessageDialog(this, "Instructor Updated sucsess...");
                instructorIdCombo.removeAllItems();
                fillInstructorIdCombo();
            }else{
                JOptionPane.showMessageDialog(this, "Something wrong...");
                instructorIdCombo.removeAllItems();
                fillInstructorIdCombo();
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void instructorIdComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_instructorIdComboItemStateChanged
        try {
            if (instructorIdCombo.getSelectedItem()!=null) {
                String instructorId = instructorIdCombo.getSelectedItem().toString();
                Instructor instructor=InstructorController.searchInstructor(instructorId);
                if (instructor!=null) {
                    nameTxt.setText(instructor.getName());
                    nicTxt.setText(instructor.getNic());
                    emailTxt.setText(instructor.getEmail());
                    phoneTxt.setText(Integer.toString(instructor.getPhone()));
                    addressTxt.setText(instructor.getAddress());
                    genderTxt.setText(instructor.getGender());
                    dobTxt.setText(instructor.getDob());
                }else{
                    JOptionPane.showMessageDialog(this, "Somthing wrong...");
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_instructorIdComboItemStateChanged

    private void newInstructorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newInstructorBtnActionPerformed
        try {
            newInstructorBtn.setVisible(false);
            addBtn.setVisible(true);
            instructorIdCombo.setVisible(false);
            instructorIdTxt.setVisible(true);
            String newId = IDGenerator.getNewId("instructor", "instructorId", "i");
            instructorIdTxt.setText(newId);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageAdminPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newInstructorBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JFileChooser chooser = new JFileChooser();
            chooser.setDialogTitle("Save Image");
            chooser.setFileFilter(new FileNameExtensionFilter("IMAGES ONLY", "png", "jpeg", "jpg")); //this file extentions are shown
            BufferedImage image=new BufferedImage(110, 150, BufferedImage.TRANSLUCENT);
            int showSaveDialog = chooser.showSaveDialog(this);
            String filePath = "G:\\UCSC\\2nd year\\2year1sem\\SCS2104_Programming III\\"
                    + "JAVA take home\\NewProject\\TakeHomeAssignment_New\\src\\images\\profilePics";//chooser.getCurrentDirectory().toString().replace("\\", "/");
            String fileName = chooser.getSelectedFile().getName(); //get user entered file name to save
            ImageIO.write(image, "PNG", new File(filePath + "/" + fileName + ".png"));
        } catch (IOException ex) {
            Logger.getLogger(ManageInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextArea addressTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField dobTxt;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JTextField genderTxt;
    private javax.swing.JComboBox<String> instructorIdCombo;
    private javax.swing.JTextField instructorIdTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton newInstructorBtn;
    private javax.swing.JTextField nicTxt;
    private javax.swing.JTextField phoneTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
    
    private void fillInstructorIdCombo(){
        try {
            ArrayList<Instructor> instructors=InstructorController.getAllInstructor();
            for (Instructor instructor : instructors) {
                instructorIdCombo.addItem(instructor.getInstructorId());
            }
            new ComboSearch().setSearchableCombo(instructorIdCombo, true, "No Instructor found");
            //new ComboSearch().setSearchableCombo(student_idCOmbo, true, "No Student found");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(RegisterUnderGraduateStudentPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
