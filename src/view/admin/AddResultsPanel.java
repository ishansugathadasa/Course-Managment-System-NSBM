/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.admin;

import controller.BscSubjectController;
import controller.MscSubjectController;
import controller.PostGraduateStudentController;
import controller.UnderGraduateStudentController;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.BscSubject;
import model.MscExam;
import model.MscSubjects;
import model.PostGraduateStudent;
import model.UnderGraduateStudent;

/**
 *
 * @author DinukaMedis
 */
public class AddResultsPanel extends javax.swing.JPanel {

    private DefaultTableModel model;
    /**
     * Creates new form AddResultsPanel
     */
    public AddResultsPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainWindowPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        excelBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        examIdTxt = new javax.swing.JTextField();
        subjectCodeTxt = new javax.swing.JTextField();
        examDateTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        mainWindowPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainWindowPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        studentTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Student Name", "Results"
            }
        ));
        studentTable.setRowHeight(30);
        jScrollPane1.setViewportView(studentTable);

        mainWindowPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 1100, 430));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainWindowPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 550, 190, 90));

        excelBtn.setBackground(new java.awt.Color(162, 234, 249));
        excelBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        excelBtn.setText("Get Excel Copy");
        excelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelBtnActionPerformed(evt);
            }
        });
        mainWindowPanel.add(excelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 220, 40));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Subject Code :");
        mainWindowPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 110, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Exam Date :");
        mainWindowPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 100, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Exame Id :");
        mainWindowPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, 30));

        examIdTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mainWindowPanel.add(examIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 240, -1));

        subjectCodeTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mainWindowPanel.add(subjectCodeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 140, -1));

        examDateTxt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mainWindowPanel.add(examDateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 240, -1));

        jButton1.setText("Search students");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        mainWindowPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1140, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainWindowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void excelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelBtnActionPerformed
        try {
            /*JFileChooser chooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Xcel", "xsl");
            chooser.setFileFilter(filter);
            int returnVal = chooser.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
            JOptionPane.showMessageDialog(this, chooser.getSelectedFile().getAbsolutePath().replace("\\", "\\\\"));
            File file=new File(chooser.getSelectedFile().getAbsolutePath().replace("\\", "\\\\")+".xls");
            exportTable(studentTable,file);
            } catch (IOException ex) {
            Logger.getLogger(ResultsPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            }*/
            String examId= examIdTxt.getText();
            String subjectCode= subjectCodeTxt.getText();
            String date = examDateTxt.getText();
            String path="src\\\\examResults\\\\"+examId+"_"+subjectCode+"_"+date;
            File file=new File(path+".xlsx");
            exportTable(studentTable, file);
        } catch (IOException ex) {
            Logger.getLogger(AddResultsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_excelBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String subjectCode=subjectCodeTxt.getText();
            String studentType="";
            BscSubject bscSubject=BscSubjectController.searchBscSubject(subjectCode);
            MscSubjects mscSubjects=MscSubjectController.searchMscSubjects(subjectCode);
            if (bscSubject!=null) {
                studentType="BSC";
            }else if(mscSubjects!=null){
                studentType="MSC";
            }else{
                JOptionPane.showMessageDialog(this, "Please check input details...");
                return;
            }
            if (studentType.equals("BSC")) {
                model = (DefaultTableModel) studentTable.getModel();
                ArrayList<UnderGraduateStudent> underGraduateStudents=UnderGraduateStudentController.getAllUnderGraduateStudent();
                for (UnderGraduateStudent underGraduateStudent : underGraduateStudents) {
                    Object[] rowData = {underGraduateStudent.getAddmissionNo(),underGraduateStudent.getName(),""};
                    model.addRow(rowData);
                }
            }else{
                model = (DefaultTableModel) studentTable.getModel();
                ArrayList<PostGraduateStudent> postGraduateStudents=PostGraduateStudentController.getAllPostGraduateStudent();
                for (PostGraduateStudent postGraduateStudent : postGraduateStudents) {
                    Object[] rowData = {postGraduateStudent.getAddmissionNo(),postGraduateStudent.getName(),""};
                    model.addRow(rowData);
                }
            }
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddResultsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField examDateTxt;
    private javax.swing.JTextField examIdTxt;
    private javax.swing.JButton excelBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainWindowPanel;
    private javax.swing.JTable studentTable;
    private javax.swing.JTextField subjectCodeTxt;
    // End of variables declaration//GEN-END:variables

    /*Method for export table data to Excel sheet Â© Dinuka Kasun Medis*/
    private void exportTable(JTable table, File file1) throws IOException {
        TableModel model = table.getModel();
        File file = file1;
        FileWriter out = new FileWriter(file);
        for (int i = 0; i < model.getColumnCount(); i++) {
            out.write(model.getColumnName(i) + "\t");
        }
        out.write("\n");
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                out.write(model.getValueAt(i, j).toString() + "\t");
            }
            out.write("\n");
        }
        out.close();
    }
}
